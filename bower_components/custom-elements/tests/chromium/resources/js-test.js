function isWorker(){return("undefined"==typeof document||"undefined"==typeof document.childNodes)&&!!self.importScripts}function descriptionQuiet(e){description(e,!0)}function escapeHTML(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\0/g,"\\0")}function testPassed(e){debug('<span><span class="pass">PASS</span> '+escapeHTML(e)+"</span>")}function testFailed(e){debug('<span><span class="fail">FAIL</span> '+escapeHTML(e)+"</span>")}function areArraysEqual(e,t){try{if(e.length!==t.length)return!1;for(var a=0;a<e.length;a++)if(e[a]!==t[a])return!1}catch(e){return!1}return!0}function isMinusZero(e){return 0===e&&1/e<0}function isNewSVGTearOffType(e){return["[object SVGLength]","[object SVGLengthList]","[object SVGPoint]","[object SVGPointList]","[object SVGNumber]","[object SVGTransform]","[object SVGTransformList]"].indexOf(""+e)!=-1}function isResultCorrect(e,t){return 0===t?e===t&&1/e===1/t:e===t||(!(!isNewSVGTearOffType(t)||typeof t!=typeof e||e.valueAsString!=t.valueAsString)||("number"==typeof t&&isNaN(t)?"number"==typeof e&&isNaN(e):!(!t||Object.prototype.toString.call(t)!=Object.prototype.toString.call([]))&&areArraysEqual(e,t)))}function getAllPropertyNames(e){var t=[];for(var a in e)t.push(a);return t.sort()}function stringify(e){return isNewSVGTearOffType(e)?e.valueAsString:0===e&&1/e<0?"-0":""+e}function evalAndLog(_a,_quiet){"string"!=typeof _a&&debug("WARN: tryAndLog() expects a string argument"),_quiet||debug(_a);var _av;try{_av=eval(_a)}catch(e){testFailed(_a+" threw exception "+e)}return _av}function shouldBe(_a,_b,quiet,opt_tolerance){"string"==typeof _a&&"string"==typeof _b||debug("WARN: shouldBe() expects string arguments");var _exception,_av;try{_av=eval(_a)}catch(e){_exception=e}var _bv=eval(_b);_exception?testFailed(_a+" should be "+_bv+". Threw exception "+_exception):isResultCorrect(_av,_bv)||"number"==typeof opt_tolerance&&"number"==typeof _av&&Math.abs(_av-_bv)<=opt_tolerance?quiet||testPassed(_a+" is "+_b):testFailed(typeof _av==typeof _bv?_a+" should be "+_bv+". Was "+stringify(_av)+".":_a+" should be "+_bv+" (of type "+typeof _bv+"). Was "+_av+" (of type "+typeof _av+").")}function _waitForCondition(e,t,a,o){e()?a():Date.now()>t?o():requestAnimationFrame(function(){_waitForCondition(e,t,a,o)})}function shouldBecomeEqual(_a,_b,_completionHandler,_timeout){"string"==typeof _a&&"string"==typeof _b||debug("WARN: shouldBecomeEqual() expects string arguments"),void 0===_timeout&&(_timeout=500);var _bv,_condition=function(){var _exception,_av;try{_av=eval(_a)}catch(e){_exception=e}return _bv=eval(_b),_exception&&testFailed(_a+" should become "+_bv+". Threw exception "+_exception),!!isResultCorrect(_av,_bv)&&(testPassed(_a+" became "+_b),!0)},_failureTime=Date.now()+_timeout,_failureHandler=function(){testFailed(_a+" failed to change to "+_bv+" in "+_timeout/1e3+" seconds."),_completionHandler()};_waitForCondition(_condition,_failureTime,_completionHandler,_failureHandler)}function shouldBecomeEqualToString(e,t,a,o){"string"==typeof e&&"string"==typeof t||debug("WARN: shouldBecomeEqualToString() expects string arguments");var n=JSON.stringify(t);shouldBecomeEqual(e,n,a,o)}function shouldBeType(_a,_type){var _exception,_av;try{_av=eval(_a)}catch(e){_exception=e}var _typev=eval(_type);_av instanceof _typev?testPassed(_a+" is an instance of "+_type):testFailed(_a+" is not an instance of "+_type)}function shouldBeCloseTo(_a_raw,_b_raw,_tolerance,_quiet){if("string"!=typeof _a_raw)return void testFailed("shouldBeCloseTo() requires string argument _a_raw. was type "+typeof _a_raw);if("number"!=typeof _b_raw&&"string"!=typeof _b_raw)return void testFailed("shouldBeCloseTo() requires numeric or string argument _b_raw. was type "+typeof _b_raw);if("number"!=typeof _tolerance)return void testFailed("shouldBeCloseTo() requires numeric argument _tolerance. was type "+typeof _tolerance);var _a_evaled;try{_a_evaled=eval(_a_raw)}catch(e){return void testFailed(_a_raw+" should be within "+_tolerance+" of "+_b_raw+". Threw exception "+e)}var _b_evaled;if("number"==typeof _b_raw)_b_evaled=_b_raw;else try{_b_evaled=eval(_b_raw)}catch(e){return void testFailed(_a_raw+" should be within "+_tolerance+" of "+_b_raw+". Threw exception "+e)}typeof _a_evaled!=typeof _b_evaled?testFailed(_a_raw+" should be of type "+typeof _b_evaled+" but was of type "+typeof _a_evaled):Math.abs(_a_evaled-_b_evaled)<=_tolerance?_quiet||testPassed(_a_raw+" is within "+_tolerance+" of "+_b_raw):testFailed(_a_raw+" should be within "+_tolerance+" of "+_b_raw+". Was "+_a_evaled+".")}function shouldNotBe(_a,_b,_quiet){"string"==typeof _a&&"string"==typeof _b||debug("WARN: shouldNotBe() expects string arguments");var _exception,_av;try{_av=eval(_a)}catch(e){_exception=e}var _bv=eval(_b);_exception?testFailed(_a+" should not be "+_bv+". Threw exception "+_exception):isResultCorrect(_av,_bv)?testFailed(_a+" should not be "+_bv+"."):_quiet||testPassed(_a+" is not "+_b)}function shouldBecomeDifferent(_a,_b,_completionHandler,_timeout){"string"==typeof _a&&"string"==typeof _b||debug("WARN: shouldBecomeDifferent() expects string arguments"),void 0===_timeout&&(_timeout=500);var _bv,_condition=function(){var _exception,_av;try{_av=eval(_a)}catch(e){_exception=e}return _bv=eval(_b),_exception&&testFailed(_a+" should became not equal to "+_bv+". Threw exception "+_exception),!isResultCorrect(_av,_bv)&&(testPassed(_a+" became different from "+_b),!0)},_failureTime=Date.now()+_timeout,_failureHandler=function(){testFailed(_a+" did not become different from "+_bv+" in "+_timeout/1e3+" seconds."),_completionHandler()};_waitForCondition(_condition,_failureTime,_completionHandler,_failureHandler)}function shouldBeTrue(e,t){shouldBe(e,"true",t)}function shouldBeTrueQuiet(e){shouldBe(e,"true",!0)}function shouldBeFalse(e,t){shouldBe(e,"false",t)}function shouldBeNaN(e,t){shouldBe(e,"NaN",t)}function shouldBeNull(e,t){shouldBe(e,"null",t)}function shouldBeZero(e,t){shouldBe(e,"0",t)}function shouldBeEqualToString(e,t){"string"==typeof e&&"string"==typeof t||debug("WARN: shouldBeEqualToString() expects string arguments");var a=JSON.stringify(t);shouldBe(e,a)}function shouldBeEqualToNumber(e,t){"string"==typeof e&&"number"==typeof t||debug("WARN: shouldBeEqualToNumber() expects a string and a number arguments");var a=JSON.stringify(t);shouldBe(e,a)}function shouldBeEmptyString(e){shouldBeEqualToString(e,"")}function shouldEvaluateTo(actual,expected,opt_tolerance){if(null==expected)shouldBeNull(actual);else if("undefined"==typeof expected)shouldBeUndefined(actual);else if("function"==typeof expected){try{var actualValue=eval(actual)}catch(e){return void testFailed("Evaluating "+actual+": Threw exception "+e)}shouldBe("'"+actualValue.toString().replace(/\n/g,"")+"'","'"+expected.toString().replace(/\n/g,"")+"'")}else"object"==typeof expected?shouldBeTrue(actual+" == '"+expected+"'"):"string"==typeof expected?shouldBe(actual,expected,void 0,opt_tolerance):"boolean"==typeof expected?(shouldBe("typeof "+actual,"'boolean'"),expected?shouldBeTrue(actual):shouldBeFalse(actual)):"number"==typeof expected?opt_tolerance?shouldBeCloseTo(actual,expected,opt_tolerance):shouldBe(actual,stringify(expected)):(debug(expected+" is unknown type "+typeof expected),shouldBeTrue(actual,"'"+expected.toString()+"'"))}function shouldEvaluateToSameObject(actual,expected,quiet){"string"!=typeof actual&&debug("WARN: shouldEvaluateToSameObject() expects the first argument (actual) to be a string.");try{actualEvaled=eval(actual)}catch(e){return void testFailed("Evaluating "+actual+": Threw exception "+e)}isResultCorrect(actualEvaled,expected)?quiet||testPassed(actual+" is "+stringify(expected)):testFailed(actual+" should be "+stringify(expected)+". Was "+stringify(actualEvaled))}function shouldBeNonZero(_a){var _exception,_av;try{_av=eval(_a)}catch(e){_exception=e}_exception?testFailed(_a+" should be non-zero. Threw exception "+_exception):0!=_av?testPassed(_a+" is non-zero."):testFailed(_a+" should be non-zero. Was "+_av)}function shouldBeNonNull(_a){var _exception,_av;try{_av=eval(_a)}catch(e){_exception=e}_exception?testFailed(_a+" should be non-null. Threw exception "+_exception):null!=_av?testPassed(_a+" is non-null."):testFailed(_a+" should be non-null. Was "+_av)}function shouldBeUndefined(_a){var _exception,_av;try{_av=eval(_a)}catch(e){_exception=e}_exception?testFailed(_a+" should be undefined. Threw exception "+_exception):"undefined"==typeof _av?testPassed(_a+" is undefined."):testFailed(_a+" should be undefined. Was "+_av)}function shouldBeDefined(_a){var _exception,_av;try{_av=eval(_a)}catch(e){_exception=e}_exception?testFailed(_a+" should be defined. Threw exception "+_exception):void 0!==_av?testPassed(_a+" is defined."):testFailed(_a+" should be defined. Was "+_av)}function shouldBeGreaterThan(_a,_b){"string"==typeof _a&&"string"==typeof _b||debug("WARN: shouldBeGreaterThan expects string arguments");var _exception,_av;try{_av=eval(_a)}catch(e){_exception=e}var _bv=eval(_b);_exception?testFailed(_a+" should be > "+_b+". Threw exception "+_exception):"undefined"==typeof _av||_av<=_bv?testFailed(_a+" should be > "+_b+". Was "+_av+" (of type "+typeof _av+")."):testPassed(_a+" is > "+_b)}function shouldBeGreaterThanOrEqual(_a,_b){"string"==typeof _a&&"string"==typeof _b||debug("WARN: shouldBeGreaterThanOrEqual expects string arguments");var _exception,_av;try{_av=eval(_a)}catch(e){_exception=e}var _bv=eval(_b);_exception?testFailed(_a+" should be >= "+_b+". Threw exception "+_exception):"undefined"==typeof _av||_av<_bv?testFailed(_a+" should be >= "+_b+". Was "+_av+" (of type "+typeof _av+")."):testPassed(_a+" is >= "+_b)}function shouldNotThrow(_a){try{eval(_a),testPassed(_a+" did not throw exception.")}catch(e){testFailed(_a+" should not throw exception. Threw exception "+e+".")}}function shouldThrow(_a,_e){var _exception,_av;try{_av=eval(_a)}catch(e){_exception=e}var _ev;_e&&(_ev=eval(_e)),_exception?"undefined"==typeof _e||_exception==_ev?testPassed(_a+" threw exception "+_exception+"."):testFailed(_a+" should throw "+("undefined"==typeof _e?"an exception":_ev)+". Threw exception "+_exception+"."):testFailed("undefined"==typeof _av?_a+" should throw "+("undefined"==typeof _e?"an exception":_ev)+". Was undefined.":_a+" should throw "+("undefined"==typeof _e?"an exception":_ev)+". Was "+_av+".")}function shouldBeNow(a,delta){void 0===delta&&(delta=1e3);for(var i=0;i<1e3;++i){var startDate=Date.now(),av=eval(a),date=av.valueOf(),endDate=Date.now();if(!(startDate>endDate))return"number"!=typeof date?void testFailed(a+" is not a number or a Date. Got "+av):date<startDate-delta?void testFailed(a+" is not the curent time. Got "+av+" which is "+(startDate-date)/1e3+" seconds in the past."):date>endDate+delta?void testFailed(a+" is not the current time. Got "+av+" which is "+(date-endDate)/1e3+" seconds in the future."):void testPassed(a+" is equivalent to Date.now().")}testFailed(a+" cannot be tested against the current time. The clock is going backwards too often.")}function expectError(){expectingError&&testFailed("shouldHaveError() called twice before an error occurred!"),expectingError=!0}function shouldHaveHadError(e){return expectingError?void testFailed("No error thrown between expectError() and shouldHaveHadError()"):expectedErrorMessage?(e?expectedErrorMessage.indexOf(e)!==-1?testPassed("Got expected error: '"+e+"'"):testFailed("Unexpected error '"+e+"'"):testPassed("Got expected error"),void(expectedErrorMessage=void 0)):void testFailed("expectError() not called before shouldHaveHadError()")}function asyncGC(e){var t=window.internals.numberOfLiveDocuments();GCController.collectAll(),setTimeout(function(){var a=window.internals.numberOfLiveDocuments();a<t?asyncGC(e):e()},0)}function gc(){if("undefined"!=typeof GCController)GCController.collectAll();else for(var e=function(a){if(a<1)return{};var o={i:"ab"+t+t/1e5};o+="foo",e(a-1)},t=0;t<1e3;t++)e(10)}function asyncMinorGC(e){"undefined"!=typeof GCController?GCController.minorCollect():testFailed("Minor GC is available only when you enable the --expose-gc option in V8."),setTimeout(e,0)}function setPrintTestResultsLazily(){self._lazyTestResults=self._lazyTestResults||[]}function isSuccessfullyParsed(){successfullyParsed=!unexpectedErrorMessage,shouldBeTrue("successfullyParsed"),debug('<br /><span class="pass">TEST COMPLETE</span>')}function finishJSTest(){if(wasFinishJSTestCalled=!0,self.wasPostTestScriptParsed){if(isSuccessfullyParsed(),self._lazyDescription&&getOrCreateTestElement("description","p").appendChild(self._lazyDescription),self._lazyTestResults&&self._lazyTestResults.length>0){var e=getOrCreateTestElement("console","div");self._lazyTestResults.forEach(function(t){var a=document.createElement("span");e.appendChild(a),a.innerHTML=t+"<br />"})}self.jsTestIsAsync&&self.testRunner&&testRunner.notifyDone()}}function startWorker(e,t){self.jsTestIsAsync=!0,debug("Starting worker: "+e);var a;return a="shared"==t?new SharedWorker(e,"Shared Worker"):"compositor"==t?new CompositorWorker(e):new Worker(e),a.onmessage=function(e){var t="[Worker] ";if(e.data.length<5||":"!=e.data.charAt(4))return void debug(t+e.data);var a=e.data.substring(0,4),o=t+e.data.substring(5);"PASS"==a?testPassed(o):"FAIL"==a?testFailed(o):"DESC"==a?description(o):"DONE"==a?finishJSTest():debug(t+e.data)},a.onerror=function(e){debug("Got error from worker: "+e.message),finishJSTest()},"shared"==t&&(a.port.onmessage=function(e){a.onmessage(e)},a.port.start()),a}var _lazyTestResults,_lazyDescription;self.testRunner&&(self.enablePixelTesting?testRunner.dumpAsTextWithPixelResults():testRunner.dumpAsText());var isJsTest=!0,description,debug,successfullyParsed,getOrCreateTestElement,expectingError,expectedErrorMessage,unexpectedErrorMessage;!function(){function e(){var e=document.createElement("style");e.textContent=a,(document.head||document.documentElement).appendChild(e)}function t(){wasPostTestScriptParsed=!0,window.jsTestIsAsync?(window.testRunner&&testRunner.waitUntilDone(),window.wasFinishJSTestCalled&&finishJSTest()):finishJSTest()}getOrCreateTestElement=function(e,t){var a=document.getElementById(e);if(a)return a;a=document.createElement(t),a.id=e;var o,n=document.body||document.documentElement;return o="description"==e?getOrCreateTestElement("console","div"):n.firstChild,n.insertBefore(a,o),a},description=function e(t,a){var o=document.createElement("span");if(a?o.innerHTML="<p>"+t+'</p><p>On success, you will see no "<span class="fail">FAIL</span>" messages, followed by "<span class="pass">TEST COMPLETE</span>".</p>':o.innerHTML="<p>"+t+'</p><p>On success, you will see a series of "<span class="pass">PASS</span>" messages, followed by "<span class="pass">TEST COMPLETE</span>".</p>',_lazyTestResults)return void(_lazyDescription=o);var e=getOrCreateTestElement("description","p");e.firstChild?e.replaceChild(o,e.firstChild):e.appendChild(o)},debug=function(e){if(self._lazyTestResults)self._lazyTestResults.push(e);else{var t=document.createElement("span");getOrCreateTestElement("console","div").appendChild(t),t.innerHTML=e+"<br />"}};var a=".pass {font-weight: bold;color: green;}.fail {font-weight: bold;color: red;}#console {white-space: pre-wrap;font-family: monospace;}";isWorker()||(window.addEventListener("DOMContentLoaded",t,!1),e()),self.isOnErrorTest||(self.onerror=function(e){return self.expectingError?(self.expectedErrorMessage=e,void(self.expectingError=!1)):(self.unexpectedErrorMessage=e,void(self.jsTestIsAsync&&(self.testFailed("Unexpected error: "+e),finishJSTest())))})}();var wasPostTestScriptParsed,wasFinishJSTestCalled,jsTestIsAsync;if(isWorker()){var workerPort=self;"Shared Worker"==self.name&&(self.onconnect=function(e){workerPort=e.ports[0],workerPort.onmessage=function(e){var t=e.data.indexOf(":");if(t==-1)return void testFailed("Unrecognized message to shared worker: "+e.data);var a=e.data.substring(0,t),o=e.data.substring(t+1);try{"IMPORT"==a?importScripts(o):testFailed("Unrecognized message to shared worker: "+e.data)}catch(e){testFailed("Caught exception in shared worker onmessage: "+e)}}}),description=function(e,t){workerPort.postMessage("DESC:"+e)},testFailed=function(e){workerPort.postMessage("FAIL:"+e)},testPassed=function(e){workerPort.postMessage("PASS:"+e)},finishJSTest=function(){workerPort.postMessage("DONE:")},debug=function(e){workerPort.postMessage(e)}}